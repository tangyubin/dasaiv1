<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="jdbc:mysql://localhost/dasaiv1"/>
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="root"/>
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="123456"/>
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="40"/>
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="1"/>
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="1"/>
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="20"/>
	</bean>

	<!-- 定义Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>com/dasai/domain/Mark.hbm.xml</value>
				<value>com/dasai/domain/Message.hbm.xml</value>
				<value>com/dasai/domain/User.hbm.xml</value>
				<value>com/dasai/domain/Work.hbm.xml</value>
				<value>com/dasai/domain/WorkType.hbm.xml</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 指定数据库方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect</prop>
				<!-- 是否根据需要每次自动创建数据库 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 显示Hibernate持久化操作所生成的SQL -->
				<!-- <prop key="hibernate.show_sql">true</prop> -->
				<!-- 将SQL脚本进行格式化后再输出 -->
				<!-- <prop key="hibernate.format_sql">true</prop> -->
			</props>
		</property>
	</bean>
	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
	<bean id="transactionManager" class=
		"org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 配置HibernateTransactionManager时需要依注入SessionFactory的引用 -->
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!-- 配置事务切面Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true"/>
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，匹配com.dasai.service.impl包下
			所有以Impl结尾的类的所有方法的执行 -->
		<aop:pointcut id="dasaiPointcut"
			expression=
			"execution(* com.dasai.service.impl.*Impl.*(..))"/>
		<!-- 指定在txAdvice切入点应用txAdvice事务切面 -->
		<aop:advisor advice-ref="txAdvice" 
			pointcut-ref="dasaiPointcut"/>
	</aop:config>
	
	<!-- 定义业务逻辑组件模板 -->
    <bean id="managerTemplate" abstract="true" lazy-init="true">
		<!-- 为业务逻辑组件注入DAO组件 -->
        <property name="userDao" ref="userDao"/>
        <property name="studentDao" ref="studentDao"/>
        <property name="teamDao" ref="teamDao"/>
        <property name="teacherDao" ref="teacherDao"/>
        <property name="adminDao" ref="adminDao"/>
        <property name="markDao" ref="markDao"/>
        <property name="messageDao" ref="messageDao"/>
        <property name="workDao" ref="workDao"/>
        <property name="workTypeDao" ref="workTypeDao"/>
	</bean>
	<!-- 定义业务逻辑组件，继承业务逻辑组件的模板 -->
    <bean id="userManager"
		class="com.dasai.service.impl.UserManagerImpl"
		parent="managerTemplate"/>
	
	
	<!-- ================================================================ -->
	<!-- 配置Dao层组件 -->
	<bean id="daoTemplate" abstract="true" lazy-init="true">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="userDao"
		class="com.dasai.dao.impl.UserDaoImpl"
		parent="daoTemplate"/>

	<bean id="adminDao"
		class="com.dasai.dao.impl.AdminDaoImpl"
		parent="daoTemplate"/>

	<bean id="studentDao"
		class="com.dasai.dao.impl.StudentDaoImpl"
		parent="daoTemplate"/>

	<bean id="teacherDao"
		class="com.dasai.dao.impl.TeacherDaoImpl"
		parent="daoTemplate"/>

	<bean id="teamDao"
		class="com.dasai.dao.impl.TeamDaoImpl"
		parent="daoTemplate"/>

	<bean id="markDao"
		class="com.dasai.dao.impl.MarkDaoImpl"
		parent="daoTemplate"/>

	<bean id="messageDao"
		class="com.dasai.dao.impl.MessageDaoImpl"
		parent="daoTemplate"/>
	<bean id="workDao"
		class="com.dasai.dao.impl.WorkDaoImpl"
		parent="daoTemplate"/>
	<bean id="workTypeDao"
		class="com.dasai.dao.impl.WorkTypeDaoImpl"
		parent="daoTemplate"/>
</beans>